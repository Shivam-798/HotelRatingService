server:
  port: 8081

spring:
  application:
    name: USER-SERVICE
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: Physics3.14
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect

  config:
    import: optional:configserver:http://localhost:8085
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-93905566.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oafltacx5cYEWcky5d7
            client-secret: JzYIcZwXZjNtJWSg_aRtGnINOSc6Om_zLDd-KOELBzqJt6MXQVo-lUMrHpoIEySa
            
        provider:
          okta:
            issuer-uri: https://dev-93905566.okta.com/oauth2/default
          
    
#    iske ke config client ko add karo apne starter mein
    
#  profiles:
#    active: dev

#ye actuator ka case hai
management:
  health:
    circuitbreakers:
      enabled: true
      
    endpoints:
      web:
        exposure:
          include: health
          
  endpoint:
    health:
      show-details: always
      
#ab resilience ka case aya hai

resilience4j:
  circuitbreaker:
    instances: 
      ratingHotelBreaker:
        register-health-indicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 6s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        
  retry:
    instances:
      ratingHotelService:
          max-attempts: 3
          wait-duration: 5s
          
  ratelimiter:
    instances:
      userRAteLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s
             
          
          
                   
okta:
  oauth2:
    issuer: https://dev-93905566.okta.com/oauth2/default
    audience: api://default
    
   
          
          
      